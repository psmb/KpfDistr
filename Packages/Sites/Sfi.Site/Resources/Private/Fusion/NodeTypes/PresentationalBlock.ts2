prototype(Sfi.Site:PresentationalBlock)>
prototype(Sfi.Site:PresentationalBlock) < prototype(Neos.Fusion:Array) {
    @process.tmpl = ${'<div class="marginTop-double">' + value + '</div>'}
    @context.sectionNode = ${node.properties.section}
    block = Neos.Fusion:Tag {
        attributes.class = 'paddingTop-triple paddingBottom-double paddingHorizontal-double PresentationalBlock-mainBlock'
        attributes.style = ImageUri {
            @process.tmpl = ${'overflow: auto; background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.35)), url(' + value + '); background-size: cover; background-position: top center;'}
            asset = ${node.properties.image}
            width = 960
            height = 640
            maximumWidth>
            allowCropping = true
        }
        content = Neos.Fusion:Array {
            title = ${'<h2 class="H1 color-white marginTop-single">' + sectionNode.properties.title + '</h2>'}
            description = Neos.Fusion:Tag {
                attributes.class = 'H4 color-white textShadow-deep marginTop-single marginBottom-double large-8'
                content = ${q(node).property('description')}
                @process.contentElementEditable = ContentElementEditable {
                    property = 'description'
                }
            }
            button = Neos.Fusion:Tag {
                tagName = 'a'
                attributes.class = 'H4 Button color-white'
                attributes.href = NodeUri {
                    node = ${sectionNode}
                }
                content = ${q(node).property('buttonText')}
                @process.contentElementEditable = ContentElementEditable {
                    property = 'buttonText'
                }
            }
        }
    }

    news = Flowpack.Listable:Listable {
        @if.sectionIsSet = ${sectionNode ? true : false}
        @context.listClass = 'row small-up-1 medium-up-1 large-up-2 marginVertical-double'
        @context.itemClass = 'column'
        @context.limit = 2
        @context.paginationEnabled = ${false}
        @context.itemRenderer = 'Sfi.Site:NewsStandardShort'
        collection = ${q(sectionNode).find('[instanceof Sfi.Site:News]').get()}
    }

    @cache {
        mode = 'cached'
        entryIdentifier.node = ${node}
        entryTags {
            1 = ${'Node_' + node.identifier}
            2 = ${'DescendantOf_' + node.identifier}
            3 = ${'Node_' + sectionNode.identifier}
            4 = ${'DescendantOf_' + sectionNode.identifier}
        }
    }

    @process.contentElementWrapping = ContentElementWrapping
}
