include: OverrideStock.ts2
include: NodeTypes/**/*.ts2
include: Objects/**/*.ts2

prototype(Sfi.Site:Root) < prototype(TYPO3.Neos:Page) {
	head {
		titleTag.content = ${String.stripTags(q(node).property('title'))}
		stylesheets.site = TYPO3.TypoScript:Template {
			templatePath = 'resource://Sfi.Site/Private/Partials/SharedResources.html'
			sectionName = 'stylesheets'
		}
		javascripts.headScripts = TYPO3.TypoScript:Template {
			templatePath = 'resource://Sfi.Site/Private/Partials/SharedResources.html'
			sectionName = 'headScripts'
		}
	}
	htmlTag.attributes.lang="ru"
	bodyTag.attributes.class = 'Page'
	bodyTag.attributes.id = ${'Page-' + q(node).property('_name')}
	body {
		templatePath = 'resource://Sfi.Site/Private/Templates/Pages/Root.html'
		partialRootPath = 'resource://Sfi.Site/Private/Partials'
		layoutRootPath = 'resource://Sfi.Site/Private/Layouts'

		mainMenu = Menu {
			entryLevel = 1
			maximumLevels = 1
			attributes.class = 'MainMenu'
			normal.attributes.class = 'MainMenu-item'
			active.attributes.class = 'MainMenu-item isActive'
			current.attributes.class = 'MainMenu-item isActive'
		}
		breadcrumbs = TYPO3.Neos:BreadcrumbMenu {
			@if.notMain = ${documentNode != site}
		}

		main = PrimaryContent {
			renderArchive {
				condition = ${request.pluginArguments.listable-paginate['@action']}
				type = 'Sfi.Site:NewsBlogArchive'
			}
			renderByType {
				condition = TRUE
				type = ${q(node).property('_nodeType.name')}
			}
		}


		javascripts.bodyScripts = TYPO3.TypoScript:Template {
			templatePath = 'resource://Sfi.Site/Private/Partials/SharedResources.html'
			partialRootPath = 'resource://Sfi.Site/Private/Partials'
			sectionName = 'bodyScripts'
		}

		showCallout = ${q(node).is('[instanceof Sfi.Site:PageAbout]') ? false : true}

		# Cover
		title = ${node.properties.title}
		description = ${node.properties.description}
		showCover = ${q(node).is('[instanceof Sfi.Site:HasCover]') && !request.pluginArguments.listable-paginate['@action']}
		coverImage = TYPO3.Neos:ImageUri {
			asset = ${node.properties.imageWide}
			width = 1168
			height = 437
			allowCropping = TRUE
			allowUpScaling = TRUE
		}

		# Editable info in header and footer
		site = ${site}
		headerInfo = ${q(site).property('headerInfo')}
		headerDescription = ${q(site).property('headerDescription')}
		address = ${q(site).property('address')}
		phone = ${q(site).property('phone')}
		email = ${q(site).property('email')}
		contactPersonName = ${q(site).property('contactPersonName')}
		contactPersonPosition = ${q(site).property('contactPersonPosition')}
		contactPersonQuote = ${q(site).property('contactPersonQuote')}
		contactPersonImage = ${q(site).property('contactPersonImage')}
	}
}

root.@cache.entryIdentifier.paginationFlag = ${request.pluginArguments.listable-paginate['@action']}
root.@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}
prototype(TYPO3.Neos:Page).@cache.entryIdentifier.paginationFlag = ${request.pluginArguments.listable-paginate['@action']}
prototype(TYPO3.Neos:Page).@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}


root.fallbackPage {
	@position = 'before default'
	condition = TRUE
	type = 'Sfi.Site:Root'
}

# Disable stupid layout mechanism
root.layout>
